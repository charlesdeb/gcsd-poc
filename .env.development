# over-ridden by .env.development.local
DATABASE_URL="postgres://gcsd:secret-password@localhost:5432/gcsd_development"

# switch off/on Http authentication here, and provide the username/password
USE_HTTP_AUTH=true
HTTP_USERNAME=some_username
HTTP_PASSWORD=some_password

# Used by mail_interceptor gem in config/initializers/mail_interceptor.rb
FORWARD_EMAILS_TO=bob@example.com
DELIVER_EMAILS_TO=@example.com

# email settings - check SMTP provider details (eg Brevo, Sendgrid...)
SMTP_USER_NAME=<user name, could look like an email address>
SMTP_PASSWORD=<secret>
SMTP_DOMAIN=arts-release-studios.org
SMTP_ADDRESS=<smtp-stuff.sending-company.com>
MAILER_SENDER=gcstudioday@gmail.com

# Google stuff
GTM_ID=GTM-XXXXXX
RECAPTCHA_SITE_V3=XXXXXX
RECAPTCHA_SECRET_V3=XXXXXX
RECAPTCHA_SITE_V2=XXXXXX   # unused
RECAPTCHA_SECRET_V2=XXXXXX # unused


# Filebase Storage - but we are just using local storage ATM
FILEBASE_ENDPOINT=https://s3.filebase.com
FILEBASE_ACCESS_KEY_ID=xxxxx
FILEBASE_SECRET_ACCESS_KEY=xxxxx
FILEBASE_BUCKET=arts-release-studios-development
FILEBASE_REGION=us-east-1

# To enable attachments in the Trix editor, the Filebase CORS policy needs to be set
# as per instructions here:
# https://docs.filebase.com/api-documentation/cross-origin-resource-sharing-cors/create-and-apply-a-cors-rule-to-a-filebase-bucket
# $> aws --endpoint https://s3.filebase.com s3api put-bucket-cors --bucket arts-release-studios-development --cors-configuration=file:///media/edrive/Documents/Current/Charles/Clients/ArtsRelease/gcsd/code/config/cors-development.json
# $> aws --endpoint https://s3.filebase.com s3api get-bucket-cors --bucket arts-release-studios-development

# Scout
SCOUT_APM_KEY=xxx
SCOUT_LOG_LEVEL=info
